@model TicketApp.BusinessLogic.Implementation.Events.EditEventModel
@using TicketApp.Entities.Enums
@{
    ViewData["Title"] = "Create";
}

<h2>Edit</h2>

<style>

</style>

<div class="row">
    <form asp-action="Edit" enctype="multipart/form-data" class="row g-3">
        <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">Event name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Please enter a description</label>
                <textarea asp-for="Description" class="form-control autoresizing"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group" id="initialLocationForm">
                <label asp-for="LocationId" class="control-label">Where does it take place?</label>
                <div class="input-group">
                    @Html.DropDownListFor(x => x.LocationId, new SelectList(Model.Locations, "Value", "Text"), htmlAttributes: new { @class = "form-select" , @id = "initialLocationSelect"})
                    @await Html.PartialAsync("../Location/CreateLocationFormPartial.cshtml")
                </div>

                <span asp-validation-for="LocationId" class="text-danger"></span>
            </div>



            <div class="form-group">
                <label asp-for="StartDate" class="control-label">Start date</label>
                <input type="datetime-local" asp-for="StartDate" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-ddThh:mm")" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label">End date</label>
                <input type="datetime-local" asp-for="EndDate" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-ddThh:mm")" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IsOutside" class="control-label">Check the box if the event is outside</label>
                <input type="checkbox" asp-for="IsOutside" class="form-check-inline" />
                <span asp-validation-for="IsOutside" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventTypeId" class="control-label">Please choose an event type</label>
                <select id="eventTypeSelect" class="form-select" asp-for=EventTypeId asp-items="Html.GetEnumSelectList<EventTypes>()"></select>
                <span asp-validation-for="EventTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventGenreId" class="control-label">Please choose an event genre</label>
                <select id="eventGenreSelect" asp-for="EventGenreId" class="form-control">
                    <option value="">Loading...</option>
                </select>
                <span asp-validation-for="EventGenreId" class="text-danger"></span>
            </div>
            <div class="form-group form-multiple form-multiple-selected">
                <label>Upcoming artists</label>
                <div class="input-group">
                    <div class="form-multiple-wrap" id="ArtistsMultiSelect"></div>
                    @await Html.PartialAsync("../Artist/CreateArtistFormPartial")
                </div>

                <div id="ArtistIdsFormValues"></div>
                <span asp-validation-for="ArtistsIds" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="NewPicture" class="control-label">Add a poster</label>
                <input asp-for="NewPicture" id="eventPictureInput" class="pictureInput form-control pictureInContainer" accept="image/*" />
                <span asp-validation-for="NewPicture" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Submit changes" class="btn btn-primary" />
                <a asp-action="OrganizerPanel" class="btn btn-primary">Cancel</a>
            </div>

        </div>

        <div class="col-md-6">

            @if (Model.OldPicture != null)
            {
                <div class="posterPictureContainer" id="eventPictureDiv" style="background:url( data:image/jpeg;base64,@Convert.ToBase64String(Model.OldPicture) ); background-position: center; background-size: cover"></div>
            }
            else
            {
                <div class="posterPictureContainer" id="eventPictureDiv"></div>
            
            }

        </div>

        <div>
            <input type="hidden" asp-for="OrganizerId" value="@Model.OrganizerId" />
            <input type="hidden" asp-for="PictureId" value="@Model.PictureId" />
            <input type="hidden" asp-for="OldPicture" value="@Model.OldPicture" />
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script type="text/javascript" src="~/js/addOptionsInSelect.js"> </script>

<script type="text/javascript" src="~/js/MultiselectDropdown.js"></script>
<script type="text/javascript" src="~/js/createArtistForm.js"></script>
<script type="module" src="~/js/pictureModules/uploadPictureForEventModule.js"></script>
<script type="text/javascript" src="~/js/utils/AutoResizeTextarea.js"></script>


<script type="text/javascript">
    dynamicSelect("eventTypeSelect", "eventGenreSelect", @Model.EventTypeId, @Model.EventGenreId);
    CreateArtistMultiselectAndAddForm("initialArtistSelect", "ArtistsMultiSelect", "ArtistIdsFormValues", "ArtistsIds", 
        @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ArtistOptions)));
    AutoResizeTextarea("autoresizing");
  
</script>


